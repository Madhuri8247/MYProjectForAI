@model OnlineNews.Models.Database.Article

@{
    ViewData["Title"] = "EditAsWriter";
}
<h1>Edit An Article</h1>

<form asp-action="EditAsWriter" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="LinkText"></label>
        <input asp-for="LinkText" class="form-control" />
        <span asp-validation-for="LinkText" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Headline"></label>
        <input asp-for="Headline" class="form-control" />
        <span asp-validation-for="Headline" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ContentSummary"></label>
        <textarea asp-for="ContentSummary" class="form-control"></textarea>
        <span asp-validation-for="ContentSummary" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Content"></label>
        <input type="hidden" id="NewContent" asp-for="@Model.Content" class="form-control" />
        <div id="editor">
            @Html.Raw(Model.Content)
        </div>
        <span asp-validation-for="Content" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ImageLink"></label>
        <input asp-for="ImageLink" class="form-control" />
        <span asp-validation-for="ImageLink" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ChosenCategory"></label>
        <select asp-for="ChosenCategory" class="form-control" asp-items="Model.Categories">
            <option value="">Select a Category</option>
        </select>
        <span asp-validation-for="ChosenCategory" class="text-danger"></span>
    </div>

    <div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>

@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.snow.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js"></script>
<script src="https://unpkg.com/quill-html-edit-button@2.2.7/dist/quill.htmlEditButton.min.js"></script>

<script>
      Quill.register("modules/htmlEditButton", htmlEditButton);

    const quill = new Quill('#editor', {
      theme: 'snow',
      modules: {
          htmlEditButton: {}
      }
    });

    function getQuillHtml() {return quill.root.innerHTML;}

    function updateContent() {
        let html = getQuillHtml();
        document.querySelector('#NewContent').value = html;
    };

    quill.on('text-change', function (delta, source) {
        updateContent();
    });
</script>